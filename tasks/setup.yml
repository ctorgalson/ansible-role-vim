---
# setup tasks for ansible-role-vim.

- name: Get Vim version.
  ansible.builtin.shell: "set -o pipefail && (vim --version | head -n1 | awk '{ print $5 }') || test $? -eq 141"
  args:
    executable: "/bin/bash"
  register: vim_version_string
  changed_when: false

- name: Make sure it even makes sense to continue.
  ansible.builtin.fail:
    msg: "Vim does not support native package management in versions lower than 8.0."
  when: vim_version_string.stdout is version('8.0', '<')

- name: Determine home directory.
  ansible.builtin.set_fact:
    vim_home_directory: "{{ (ansible_system == 'Darwin') | ternary('Users', 'home') }}"

- name: Determine user home directory.
  ansible.builtin.set_fact:
    vim_user_home_directory: "/{{ vim_home_directory }}/{{ vim_owner }}"

- name: Determine Vim plugin parent directory.
  ansible.builtin.set_fact:
    vim_plugin_parent_directory: "{{ vim_user_home_directory }}/.vim/pack"

- name: Determine Vim start plugin directory.
  ansible.builtin.set_fact:
    vim_pack_start_subdirectory: "{{ vim_pack_subdirectory }}/start"

- name: Determine Vim opt plugin directory.
  ansible.builtin.set_fact:
    vim_pack_opt_subdirectory: "{{ vim_pack_subdirectory }}/opt"

- name: Prepare install directories.
  ansible.builtin.file:
    path: "{{ vim_plugin_parent_directory }}/{{ vim_directory }}"
    state: directory
  become: true
  become_user: "{{ vim_owner }}"
  loop:
    - "{{ vim_pack_subdirectory }}"
    - "{{ vim_pack_start_subdirectory }}"
    - "{{ vim_pack_opt_subdirectory }}"
  loop_control:
    loop_var: vim_directory
